=======================
 2. Say my name Module
=======================

Import Module:
==============
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Function:
=========
Write a function that prints `My name is <first name> <last name>`

Section // Non-Parameters 
=========================

Test case #0: A test case without Parameters

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Test case #1: A test case for using the default value of parameter `last_name`

    >>> say_my_name("Bebo")
    My name is Bebo 

Section // Correct Parameters
=============================

Test case #2: A test case to print the correct name

    >>> say_my_name("Bebo", "Khaled")
    My name is Bebo Khaled

Test case #3: A test case with both empty

    >>> say_my_name("", "")
    My name is  

Test case #4: A test case with special characters

    >>> say_my_name("\n",)
    My name is
    <blankline>  

Test case #5: A test case with spaces

    >>> say_my_name("  ", "Khaled")
    My name is    Khaled

Section // Bad Parameters
=========================

Test case #6: A test case with the first name as integer

    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Test case #7: A test case with the last name as integer

    >>> say_my_name("White", 12)
    Traceback (most recent call last):
    TypeError: last_name must be a string

Test case #8: A test case with both names as integer

    >>> say_my_name(12, 12)
    Traceback (most recent call last):
    TypeError: first_name must be a string
